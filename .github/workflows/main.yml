name: CI

on: [push, workflow_dispatch]

jobs:

  build:

    runs-on: windows-latest

    steps:

    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable RDP (Remote Desktop)
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Set runneradmin password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Set ngrok to auto-restart on boot
      run: |
        $action = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "Start-Process -NoNewWindow '.\ngrok\ngrok.exe' 'tcp 3389'"
        $trigger = New-ScheduledTaskTrigger -AtStartup
        Register-ScheduledTask -Action $action -Trigger $trigger -TaskName "ngrokReconnect" -Description "Reconnect ngrok after restart" -User "runneradmin" -Password "P@ssw0rd!"

    - name: Start ngrok and keep the session alive
      run: .\ngrok\ngrok.exe tcp 3389
